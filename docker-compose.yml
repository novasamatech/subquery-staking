version: "3"

services:
  postgres:
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  subquery-node-avail:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-avail.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-dock:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-vara:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-vara.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-dock:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-dock:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-dock.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-dock:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-joystream:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-joystream.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-joystream:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-polimec:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-polimec.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-polimec:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-polkadot:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-polkadot.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: ["CMD", "curl", "-f", "http://subquery-node-polkadot:3000/ready"]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-kusama:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-kusama.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-kusama:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-manta:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-manta.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-manta:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-moonbeam:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-moonbeam.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-moonbeam:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-moonriver:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-moonriver.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-moonriver:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-aleph-zero:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-aleph-zero.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-aleph-zero:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-zeitgeist:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-zeitgeist.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-zeitgeist:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-westend:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-westend.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-westend:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-turing:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-turing.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-turing:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-ternoa:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-ternoa.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-ternoa:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-polkadex:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-polkadex.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-ternoa:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-calamari:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-calamari.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-calamari:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-mythos:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-mythos.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-mythos:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-mythos-testnet:
    image: onfinality/subql-node:v5.6.0
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      - -f=/app/project-mythos-testnet.yaml
      - --multi-chain
      - --db-schema=app
      - --disable-historical
      - --query-limit=1000000
      - --batch-size=10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://subquery-node-mythos-testnet:3000/ready" ]
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: onfinality/subql-query:latest
    ports:
      - 3000:3000
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command:
      - --name=app
      - --playground